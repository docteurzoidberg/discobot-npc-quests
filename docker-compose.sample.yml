version: "3"
networks:
  npc-quests:

services:
  api:
    image: npc-quests-api
    hostname: npc-quests-api
    container_name: npc-quests-api
    tty: true
    build:
      context: ./www-api
    environment:
      - DATA_PATH=/data
    networks:
      - npc-quests
    volumes:
      - ./www-api/data:/data
    restart: unless-stopped

  bot:
    image: npc-quests-bot
    hostname: npc-quests-bot
    container_name: npc-quests-bot
    tty: true
    build:
      context: ./bot-quests
      dockerfile: Dockerfile
    env_file:
      - ./bot-achievements/.env.production
    environment:
      #overide api url in env file to use the docker container
      - API_URL=http://npc-quests-api:5000/quest
    networks:
      - npc-quests
    volumes:
      - ./bot-quests/data:/data
    depends_on:
      - api
    restart: unless-stopped

  cronjobs:
    image: npc-quests-cronjobs
    hostname: npc-quests-cronjobs
    container_name: npc-quests-cronjobs
    tty: true
    build:
      context: ./bot-quests
      dockerfile: Dockerfile.cronjobs
    environment:
      - API_URL=http://npc-quests-api:5000
    networks:
      - npc-quests
    depends_on:
      - api
    restart: unless-stopped

  www:
    image: npc-quests-www
    hostname: npc-quests-www
    container_name: npc-quests-www
    tty: true
    build:
      context: ./www-front
    environment:
      - NUXT_PUBLIC_API_URL=http://npc-quests-api:5000
    networks:
      - npc-quests
    ports:
      - 3000:3000
    depends_on:
      - api
    restart: unless-stopped
